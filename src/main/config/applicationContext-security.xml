<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">
    <security:http security="none" pattern="/javascript/**"/>
    <security:http security="none" pattern="/css/**"/>
    <security:http security="none" pattern="/fonts/**"/>
    <security:http security="none" pattern="/images/**"/>
    <security:http security="none" pattern="/lib/**"/>
    <security:http security="none" pattern="/uploads/**"/>
    <security:http auto-config="false" use-expressions="true" entry-point-ref="authenticationEntryPoint">
        <security:form-login login-page="/login"
                             login-processing-url="/login/ajax"
                             username-parameter="username"
                             password-parameter="password"
                             authentication-success-handler-ref="authenticationSuccessHandler"
                             authentication-failure-handler-ref="authenticationFailureHandler"/>
        <security:logout logout-success-url="/login"
                         logout-url="/login/logout"
                         invalidate-session="true"
                         delete-cookies="JSESSIONID"/>
        <!-- 指定登陆认证成功后，用户访问未授权的 URL 将跳转的 URL -->
        <security:access-denied-handler error-page="/permissiondenied"/>
        <security:session-management session-authentication-strategy-ref="sessionAuthenticationStrategy"/>
        <security:csrf/>
        <security:intercept-url pattern="/login/**" access="permitAll"/>
        <security:intercept-url pattern="/**" access="isAuthenticated()"/>
        <security:custom-filter ref="concurrencyFilter" position="CONCURRENT_SESSION_FILTER"/>
        <security:custom-filter ref="securityFilter" before="FILTER_SECURITY_INTERCEPTOR"/>
    </security:http>
    <!-- 登录认证 -->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="systemUserServiceImpl">
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    <bean id="systemUserServiceImpl" class="www.service.impl.SystemUserServiceImpl"/>
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
    <bean id="authenticationSuccessHandler" class="security.handler.AuthenticationSuccessHandler">
        <property name="systemUserService" ref="systemUserServiceImpl"/>
    </bean>
    <bean id="authenticationFailureHandler" class="security.handler.AuthenticationFailureHandler"/>
    <bean id="accessDecisionManager" class="security.manager.AccessDecisionManager"/>
    <bean id="securityMetadataSource" class="security.FilterInvocationSecurityMetadataSource"/>
    <bean id="authenticationEntryPoint"
          class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/login"/>
    </bean>
    <bean id="securityFilter" class="security.interceptor.FilterSecurityInterceptor">
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="securityMetadataSource" ref="securityMetadataSource"/>
    </bean>
    <!-- sessionManagementFilter -->
    <bean id="redirectSessionInformationExpiredStrategy"
          class="security.SimpleRedirectSessionInformationExpiredStrategy">
        <constructor-arg value="/login"/>
    </bean>
    <bean id="concurrencyFilter"
          class="org.springframework.security.web.session.ConcurrentSessionFilter">
        <constructor-arg ref="sessionRegistry"/>
        <constructor-arg ref="redirectSessionInformationExpiredStrategy"/>
    </bean>
    <bean id="sessionAuthenticationStrategy"
          class="org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy">
        <constructor-arg>
            <list>
                <bean
                    class="org.springframework.security.web.authentication.session.ConcurrentSessionControlAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                    <property name="maximumSessions" value="1"/>
                </bean>
                <bean
                    class="org.springframework.security.web.authentication.session.SessionFixationProtectionStrategy"/>
                <bean
                    class="org.springframework.security.web.authentication.session.RegisterSessionAuthenticationStrategy">
                    <constructor-arg ref="sessionRegistry"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl"/>
</beans>
