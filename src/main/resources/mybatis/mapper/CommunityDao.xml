<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.phonenumbermanager.dao.CommunityDao">
    <resultMap type="com.github.phonenumbermanager.entity.Community" id="commonResultMap">
        <result property="actualNumber" column="actual_number"/>
        <result property="dormitorySubmitted" column="dormitory_submitted"/>
        <result property="residentSubmitted" column="resident_submitted"/>
        <result property="subdistrictId" column="subdistrict_id"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.Community" id="baseResultMap" extends="commonResultMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="landline" column="landline"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.Community" id="aliasResultMap" extends="commonResultMap">
        <id property="id" column="community_id"/>
        <result property="name" column="community_name"/>
        <result property="landline" column="community_landline"/>
        <result column="community_create_time" property="createTime"/>
        <result column="community_update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.Community" id="correlationResultMap" extends="aliasResultMap">
        <association property="subdistrict" column="subdistrict_id"
                     resultMap="com.github.phonenumbermanager.dao.SubdistrictDao.aliasResultMap"/>
    </resultMap>
    <insert id="insert">
        INSERT INTO `pm_community`(`name`, `landline`, `actual_number`, dormitory_submitted, resident_submitted,
                                   `create_time`, `update_time`, `subdistrict_id`)
        VALUES (#{name}, #{landline}, #{actualNumber}, #{dormitorySubmitted}, #{residentSubmitted}, #{createTime},
                #{updateTime}, #{subdistrictId})
    </insert>
    <delete id="deleteById">
        DELETE
        FROM `pm_community`
        WHERE `id` = #{id}
    </delete>
    <delete id="deleteByName">
        DELETE
        FROM `pm_community`
        WHERE `name` = #{name}
    </delete>
    <update id="update">
        UPDATE `pm_community`
        <set>
            <if test="id != null">
                `id` = #{id}
            </if>
            <if test="name != null">
                , `name` = #{name}
            </if>
            <if test="landline != null">
                , `landline` = #{landline}
            </if>
            <if test="actualNumber != null">
                , `actual_number` = #{actualNumber}
            </if>
            <if test="dormitorySubmitted != null">
                , `dormitory_submitted` = #{dormitorySubmitted}
            </if>
            <if test="residentSubmitted != null">
                , `resident_submitted` = #{residentSubmitted}
            </if>
            <if test="createTime != null">
                , `create_time` = #{createTime}
            </if>
            <if test="updateTime != null">
                , `update_time` = #{updateTime}
            </if>
            <if test="subdistrictId != null">
                ,`subdistrict_id` = #{subdistrictId}
            </if>
        </set>
        WHERE `id` = #{id}
    </update>
    <update id="updateSubmitted">
        UPDATE `pm_community`
        <set>
            <choose>
                <when test="changeType == 0">`resident_submitted`</when>
                <otherwise>`dormitory_submitted`</otherwise>
            </choose>
            = 1
        </set>
        <where>
            <foreach collection="data" item="item" separator="AND">
                <choose>
                    <when test="communityCompanyType == item.companyType">
                        `id` = #{item.companyId}
                    </when>
                    <when test="subdistrictCompanyType == item.companyType">
                        `subdistrict_id` = #{item.companyId}
                    </when>
                </choose>
            </foreach>
        </where>
    </update>
    <select id="selectAll" resultMap="baseResultMap">
        SELECT `id`, `name`, `landline`, `actual_number`, dormitory_submitted, resident_submitted, `create_time`,
            `update_time`,
            `subdistrict_id`
        FROM `pm_community`
    </select>
    <select id="selectById" resultMap="baseResultMap">
        SELECT `id`, `name`, `landline`, `actual_number`, dormitory_submitted, resident_submitted, `create_time`,
            `update_time`,
            `subdistrict_id`
        FROM `pm_community`
        WHERE `id` = #{id}
    </select>
    <select id="selectByName" resultMap="baseResultMap">
        SELECT `id`, `name`, `landline`, `actual_number`, dormitory_submitted, resident_submitted, `create_time`,
            `update_time`,
            `subdistrict_id`
        FROM `pm_community`
        WHERE `name` = #{name}
    </select>
    <select id="selectAndSubdistrictAll" resultMap="correlationResultMap">
        SELECT `pm_community`.`id` AS 'community_id',
            `pm_community`.`name` AS 'community_name',
            `pm_community`.`landline` AS 'community_landline',
            `pm_community`.`actual_number`,
            `pm_community`.dormitory_submitted,
            `pm_community`.resident_submitted,
            `pm_community`.`create_time` AS 'community_create_time',
            `pm_community`.`update_time` AS 'community_update_time',
            `pm_community`.`subdistrict_id`,
            `pm_subdistrict`.`name` AS 'subdistrict_name'
        FROM `pm_community`
                 LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        ORDER BY CONVERT(`pm_community`.`name` USING gbk)
    </select>
    <select id="selectAndSubdistrictById" resultMap="correlationResultMap">
        SELECT `pm_community`.`id` AS 'community_id',
            `pm_community`.`name` AS 'community_name',
            `pm_community`.`landline` AS 'community_landline',
            `pm_community`.`actual_number`,
            `pm_community`.dormitory_submitted,
            `pm_community`.resident_submitted,
            `pm_community`.`actual_number`,
            `pm_community`.`create_time` AS 'community_create_time',
            `pm_community`.`update_time` AS 'community_update_time',
            `pm_community`.`subdistrict_id`,
            `pm_subdistrict`.`name` AS 'subdistrict_name',
            `pm_subdistrict`.`landline` AS 'subdistrict_landline'
        FROM `pm_community`
                 LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        WHERE `pm_community`.`id` = #{id}
    </select>
    <select id="selectCorrelationBySubdistrictId" resultMap="correlationResultMap">
        SELECT `pm_community`.`id` AS 'community_id',
            `pm_community`.`name` AS 'community_name',
            `pm_subdistrict`.id AS 'subdistrict_id',
            `pm_subdistrict`.`name` AS 'subdistrict_name'
        FROM `pm_community`
                 LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        WHERE `pm_community`.`subdistrict_id` = #{subdistrictId}
    </select>
    <select id="selectBySubdistrictId" resultMap="baseResultMap">
        SELECT `id`, `name`, `subdistrict_id`
        FROM `pm_community`
        WHERE `subdistrict_id` = #{subdistrictId}
    </select>
    <select id="selectIdByName" resultType="java.lang.Long">
        SELECT `id`
        FROM `pm_community`
        WHERE `name` LIKE CONCAT('%', #{name}, '%')
    </select>
    <select id="selectBySubdistrictName" resultMap="correlationResultMap">
        SELECT `pm_community`.`id` AS 'community_id',
            `pm_community`.`name` AS 'community_name',
            `pm_community`.`subdistrict_id`,
            `pm_subdistrict`.`name` AS 'subdistrict_name'
        FROM `pm_community`
                 LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        WHERE `pm_subdistrict`.`name` = #{subdistrictName}
    </select>
    <select id="selectActualNumberById" resultType="java.lang.Long">
        SELECT `actual_number`
        FROM `pm_community`
        WHERE `id` = #{id}
    </select>
    <select id="sumActualNumberBySubdistrictId" resultType="java.lang.Long">
        SELECT SUM(`pm_community`.`actual_number`)
        FROM `pm_community`
                 LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        WHERE `pm_community`.`subdistrict_id` = #{subdistrictId}
    </select>
    <select id="sumActualNumber" resultType="java.lang.Long">
        SELECT SUM(`actual_number`)
        FROM `pm_community`
    </select>
    <select id="countBySubdistrictId" resultMap="baseResultMap">
        SELECT `pm_community`.`name`,
            COUNT(`pm_community_resident`.`id`) AS 'actual_number'
        FROM `pm_community`
                 LEFT JOIN `pm_community_resident` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        WHERE `pm_community`.`subdistrict_id` = #{subdistrictId}
        GROUP BY `pm_community`.`name`;
    </select>
    <select id="selectForIdAndName" resultMap="baseResultMap">
        SELECT `id`,
            `name`
        FROM `pm_community`
    </select>
    <select id="selectByObject" resultMap="baseResultMap">
        SELECT
        `id`,
        `name`,
        `landline`
        FROM `pm_community`
        <where>
            <choose>
                <when test="id != null">
                    `id` = #{id}
                </when>
                <when test="name != null">
                    OR `name` = #{name}
                </when>
                <when test="landline != null">
                    OR `landline` = #{landline}
                </when>
            </choose>
        </where>
    </select>
    <select id="selectCorrelationSubdistrictsAll" resultMap="correlationResultMap">
        SELECT `pm_community`.`id` AS 'community_id',
            `pm_community`.`name` AS 'community_name',
            `pm_subdistrict`.`id` AS `subdistrict_id`,
            `pm_subdistrict`.`name` AS 'subdistrict_name'
        FROM `pm_community`
                 LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
    </select>
    <select id="selectCorrelationById" resultMap="correlationResultMap">
        SELECT `pm_community`.`id` AS `community_id`,
            `pm_community`.`name` AS 'community_name',
            `pm_subdistrict`.`id` AS 'subdistrict_id',
            `pm_subdistrict`.`name` AS 'subdistrict_name'
        FROM `pm_community`
                 LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        WHERE `pm_community`.`id` = #{id}
    </select>
    <select id="selectSubmittedById" resultType="java.lang.Boolean">
        SELECT
        <choose>
            <when test="submitType == 0">resident_submitted</when>
            <otherwise>`dormitory_submitted`</otherwise>
        </choose>
        FROM `pm_community` WHERE `id` = #{id}
    </select>
</mapper>
