<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.phonenumbermanager.dao.CommunityResidentDao">
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="commonResultMap">
        <result property="address" column="address"/>
        <result property="phones" column="phones"/>
        <result property="subcontractorId" column="subcontractor_id"/>
        <result property="communityId" column="community_id"/>
        <collection property="communityIds" column="community_id" ofType="java.lang.Long"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="baseResultMap"
               extends="commonResultMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="aliasResultMap"
               extends="commonResultMap">
        <id property="id" column="community_resident_id"/>
        <result property="name" column="community_resident_name"/>
        <result column="community_resident_create_time" property="createTime"/>
        <result column="community_resident_update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.CommunityResident" id="correlationResultMap"
               extends="aliasResultMap">
        <association property="community"
                     resultMap="com.github.phonenumbermanager.dao.CommunityDao.correlationResultMap"/>
        <association property="subcontractor"
                     resultMap="com.github.phonenumbermanager.dao.SubcontractorDao.correlationResultMap"/>
    </resultMap>
    <update id="truncateTable">
        TRUNCATE TABLE `pm_community_resident`
    </update>
    <insert id="insert">
        INSERT INTO `pm_community_resident` (`name`, `address`, `phones`, `create_time`, `update_time`,
                                             `subcontractor_id`,
                                             `community_id`)
        VALUES (#{name}, #{address}, #{phones}, #{createTime}, #{updateTime}, #{subcontractorId}, #{communityId})
    </insert>
    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `pm_community_resident`(`name`, `address`, `phones`, `create_time`, `update_time`,
        `subcontractor_id`,`community_id`) VALUES
        <foreach collection="objects" item="item" separator=",">
            (#{item.name}, #{item.address}, #{item.phones}, #{item.createTime}, #{item.updateTime},
            #{item.subcontractorId}, #{item.communityId})
        </foreach>
    </insert>
    <delete id="deleteById">
        DELETE
        FROM `pm_community_resident`
        WHERE `id` = #{id}
    </delete>
    <delete id="deleteByName">
        DELETE
        FROM `pm_community_resident`
        WHERE `name` = #{name}
    </delete>
    <update id="update">
        UPDATE `pm_community_resident`
        <set>
            <if test="id != null">
                `id` = #{id}
            </if>
            <if test="name != null">
                , `name` = #{name}
            </if>
            <if test="address != null">
                , `address` = #{address}
            </if>
            <if test="phones != null">
                , `phones` = #{phones}
            </if>
            <if test="createTime != null">
                , `createTime` = #{createTime}
            </if>
            <if test="updateTime != null">
                , `update_time` = #{updateTime}
            </if>
            <if test="subcontractorId != null">
                , `subcontractor_id` = #{subcontractorId}
            </if>
            <if test="communityId != null">
                , `community_id` = #{communityId}
            </if>
        </set>
        WHERE `id` = #{id}
    </update>
    <select id="selectAll" resultMap="baseResultMap">
        SELECT `id`,
            `name`,
            `address`,
            `phones`,
            `create_time`,
            `update_time`
        FROM `pm_community_resident`
        ORDER BY `id`
    </select>
    <select id="selectById" resultMap="baseResultMap">
        SELECT `id`,
            `name`,
            `address`,
            `phones`,
            `create_time`,
            `update_time`
        FROM `pm_community_resident`
        WHERE `id` = #{id}
    </select>
    <select id="selectByName" resultMap="baseResultMap">
        SELECT `id`,
            `name`,
            `address`,
            `phones`,
            `create_time`,
            `update_time`
        FROM `pm_community_resident`
        WHERE `name` = #{name}
        ORDER BY `id`
    </select>
    <select id="selectByObject" resultMap="correlationResultMap">
        SELECT
        `pm_community_resident`.`id` AS 'community_resident_id',
        `pm_community_resident`.`name` AS 'community_resident_name',
        `pm_community_resident`.`address`,
        `pm_community_resident`.`phones`,
        `pm_community_resident`.`subcontractor_id`,
        `pm_community_resident`.`create_time` AS 'community_resident_create_time',
        `pm_community_resident`.`update_time` AS 'community_resident_update_time',
        `pm_community`.`id` AS 'community_id',
        `pm_community`.`name` AS 'community_name'
        FROM `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        <where>
            <if test="id != null and id != ''">
                `pm_community_resident`.`id` = #{id}
            </if>
            <if test="name != null and name != ''">
                AND `pm_community_resident`.`name` LIKE CONCAT('%', #{name}, '%')
            </if>
            <if test="address != null and address != ''">
                AND `pm_community_resident`.`address` LIKE CONCAT('%', #{address}, '%')
            </if>
            <if test="phone != null and phone != ''">
                AND `pm_community_resident`.`phones` LIKE CONCAT('%', #{phone}, '%')
            </if>
            <if test="createTime != null">
                AND `pm_community_resident`.`create_time` = #{createTime}
            </if>
            <if test="updateTime != null">
                AND `pm_community_resident`.`update_time` = #{updateTime}
            </if>
            <if test="communityId != null and communityId != ''">
                AND `pm_community_resident`.`community_id` = #{communityId}
            </if>
            <if test="community != null and community.name != null and community.name != ''">
                AND `pm_community`.`name` = #{community.name}
            </if>
        </where>
        ORDER BY `pm_community_resident`.`id`
    </select>
    <select id="selectAndCommunityById" resultMap="correlationResultMap">
        SELECT `pm_community_resident`.`id` AS 'community_resident_id',
            `pm_community_resident`.`name` AS 'community_resident_name',
            `pm_community_resident`.`address`,
            `pm_community_resident`.`phones`,
            `pm_community_resident`.`create_time` AS 'community_resident_create_time',
            `pm_community_resident`.`update_time` AS 'community_resident_update_time',
            `pm_community_resident`.`subcontractor_id`,
            `pm_community_resident`.`community_id`,
            `pm_community`.`name` AS 'community_name',
            `pm_community`.`landline`,
            `pm_community`.`actual_number`,
            `pm_community`.resident_submitted
        FROM `pm_community_resident`
                 LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        WHERE `pm_community_resident`.`id` = #{id}
    </select>
    <select id="selectByCommunityResident" resultMap="correlationResultMap">
        SELECT `pm_community_resident`.`id` AS 'community_resident_id', `pm_community_resident`.`name` AS
        'community_resident_name', `pm_community_resident`.`address`, `pm_community_resident`.`phones`,
        `pm_community_resident`.`subcontractor_id`,
        `pm_community_resident`.`create_time` AS 'community_resident_create_time',
        `pm_community_resident`.`update_time` AS 'community_resident_update_time',
        `pm_community_resident`.`community_id`,
        `pm_community`.`name` AS 'community_name' FROM `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        <where>
            <if test="communityResident.id != null and communityResident.id != ''">
                `pm_community_resident`.`id` = #{communityResident.id}
            </if>
            <if test="communityResident.name != null and communityResident.name != ''">
                AND `pm_community_resident`.`name` LIKE CONCAT('%', #{communityResident.name}, '%')
            </if>
            <if test="communityResident.address != null and communityResident.address != ''">
                AND `pm_community_resident`.`address` LIKE CONCAT('%', #{communityResident.address}, '%')
            </if>
            <if test="communityResident.phones != null and communityResident.phones != ''">
                AND `pm_community_resident`.`phones` LIKE CONCAT('%', #{communityResident.phones}, '%')
            </if>
            <if test="communityResident.createTime != null and communityResident.createTime != ''">
                AND `pm_community_resident`.`create_time` = #{communityResident.createTime}
            </if>
            <if test="communityResident.updateTime != null and communityResident.updateTime != ''">
                AND `pm_community_resident`.`update_time` = #{communityResident.updateTime}
            </if>
            <if test="communityResident.communityId != null and communityResident.communityId != ''">
                AND `pm_community_resident`.`community_id` = #{communityResident.communityId}
            </if>
            <if test="communityResident.communityIds != null and communityResident.communityIds.size > 0">
                AND `pm_community_resident`.`community_id` IN
                <foreach collection="communityResident.communityIds" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ORDER BY `pm_community_resident`.`id`
    </select>
    <select id="selectAndCommunityByCommunityIds" resultMap="correlationResultMap">
        SELECT
        `pm_community_resident`.`id` AS 'community_resident_id',
        `pm_community_resident`.`name` AS 'community_resident_name',
        `pm_community_resident`.`address`,
        `pm_community_resident`.`phones`,
        `pm_community_resident`.`subcontractor_id`,
        `pm_community_resident`.`create_time` AS 'community_resident_create_time',
        `pm_community_resident`.`update_time` AS 'community_resident_update_time',
        `pm_community_resident`.`community_id`,
        `pm_community`.`name` AS 'community_name',
        `pm_community`.resident_submitted
        FROM
        `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        <where>
            <if test="communityIds != null">
                `pm_community_resident`.`community_id`
                <choose>
                    <when test="communityIds.size eq 1">
                        = #{communityIds[0]}
                    </when>
                    <otherwise>
                        IN
                        <foreach collection="communityIds" separator="," open="(" close=")" item="communityId">
                            #{communityId}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY `pm_community_resident`.`id`
    </select>
    <select id="selectAndCommunitiesAndSubdistrictByCommunityIds"
            resultMap="correlationResultMap">
        SELECT
        `pm_community_resident`.`id` AS 'community_resident_id',
        `pm_community_resident`.`name` AS 'community_resident_name',
        `pm_community_resident`.`address`,
        `pm_community_resident`.`phones`,
        `pm_community_resident`.`subcontractor_id`,
        `pm_community_resident`.`community_id`,
        `pm_community`.`name` AS 'community_name',
        `pm_subdistrict`.`name` AS 'subdistrict_name',
        `pm_subcontractor`.`name` AS 'subcontractor_name'
        FROM
        `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        LEFT JOIN `pm_subcontractor` ON `pm_community_resident`.`subcontractor_id` = `pm_subcontractor`.`id`
        <where>
            <if test="communityIds != null">
                `pm_community_resident`.`community_id` IN
                <foreach collection="communityIds" separator="," open="(" close=")" item="communityId">
                    #{communityId}
                </foreach>
            </if>
        </where>
        ORDER BY `pm_community`.`name`
    </select>
    <select id="selectByNameAndAddress" resultMap="correlationResultMap">
        SELECT `pm_community_resident`.`id` AS 'community_resident_id',
        `pm_community_resident`.`name` AS 'community_resident_name',
        `pm_community_resident`.`community_id`,
        `pm_community`.`name` AS 'community_name'
        FROM `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        <where>
            CONCAT(`pm_community_resident`.`name`, `pm_community_resident`.`address`) = #{nameAddress}
            <if test="id != null">
                AND `pm_community_resident`.`id` != #{id}
            </if>
            AND `pm_community`.`subdistrict_id` = #{subdistrictId}
        </where>
    </select>
    <select id="selectByPhones" resultMap="correlationResultMap">
        SELECT
        `pm_community_resident`.`id` AS 'community_resident_id',
        `pm_community_resident`.`name` AS 'community_resident_name',
        `pm_community_resident`.`phones`,
        `pm_community_resident`.`community_id`,
        `pm_community`.`name` AS 'community_name'
        FROM `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        <where>
            <foreach collection="phones" item="phone" separator="OR">
                `pm_community_resident`.`phones` LIKE CONCAT('%', #{phone}, '%')
            </foreach>
            <if test="id != null">
                AND `pm_community_resident`.`id` != #{id}
            </if>
            AND `pm_community`.`subdistrict_id` = #{subdistrictId}
        </where>
    </select>
    <select id="selectAndCommunityByCommunityId" resultMap="correlationResultMap">
        SELECT `pm_community_resident`.`id` AS 'community_resident_id',
            `pm_community_resident`.`name` AS 'community_resident_name',
            `pm_community_resident`.`address`,
            `pm_community_resident`.`phones`,
            `pm_community_resident`.`subcontractor_id`,
            `pm_community_resident`.`community_id`,
            `pm_community`.`name` AS 'community_name'
        FROM `pm_community_resident`
                 LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        WHERE `pm_community_resident`.`community_id` = #{communityId}
    </select>
    <select id="countByCommunityResident" resultType="java.lang.Long">
        SELECT COUNT(`pm_community_resident`.`id`) FROM `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        <where>
            <if test="communityResident.id != null and communityResident.id != ''">
                `pm_community_resident`.`id` = #{communityResident.id}
            </if>
            <if test="communityResident.name != null and communityResident.name != ''">
                AND `pm_community_resident`.`name` LIKE CONCAT('%', #{communityResident.name}, '%')
            </if>
            <if test="communityResident.address != null and communityResident.address != ''">
                AND `pm_community_resident`.`address` LIKE CONCAT('%', #{communityResident.address}, '%')
            </if>
            <if test="communityResident.phones != null and communityResident.phones != ''">
                and `pm_community_resident`.`phones` LIKE CONCAT('%', #{communityResident.phones},
                '%')
            </if>
            <if test="communityResident.subcontractorId != null and communityResident.subcontractorId != ''">
                AND `pm_community_resident`.`subcontractor_id` LIKE CONCAT('%', #{communityResident.subcontractorId},
                '%')
            </if>
            <if test="communityResident.createTime != null and communityResident.createTime != ''">
                AND `pm_community_resident`.`create_time` = #{communityResident.createTime}
            </if>
            <if test="communityResident.updateTime != null and communityResident.updateTime != ''">
                AND `pm_community_resident`.`update_time` = #{communityResident.updateTime}
            </if>
            <if test="communityResident.communityId != null and communityResident.communityId != 0">
                AND `pm_community_resident`.`community_id` = #{communityResident.communityId}
            </if>
            <if test="communityResident.community != null and communityResident.community.name != null">
                AND `pm_community`.`name` = #{communityResident.community.name}
            </if>
            <if test="communityResident.communityIds != null and communityResident.communityIds.size > 0">
                AND `pm_community_resident`.`community_id` IN
                <foreach collection="communityResident.communityIds" item="item" separator="," open="(" close=")">
                    #{item}
                </foreach>
            </if>
        </where>
        ORDER BY `pm_community_resident`.`id`
    </select>
    <select id="countAndCommunityByCommunityIds" resultType="java.lang.Long">
        SELECT COUNT(`id`)
        FROM `pm_community_resident`
        <where>
            <if test="communityIds != null">
                `pm_community_resident`.`community_id`
                <choose>
                    <when test="communityIds.size == 1">
                        = #{communityIds[0]}
                    </when>
                    <otherwise>
                        IN
                        <foreach collection="communityIds" separator="," open="(" close=")" item="cId">
                            #{cId}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>
    <select id="countByCommunityId" resultType="java.lang.Long">
        SELECT COUNT(`id`)
        FROM `pm_community_resident`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countBySubdistrictId" resultType="java.lang.Long">
        SELECT COUNT(`pm_community_resident`.`id`)
        FROM `pm_community_resident`
                 LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        WHERE `pm_community`.`subdistrict_id` = #{subdistrictId}
    </select>
    <select id="count" resultType="java.lang.Long">
        SELECT count(`id`)
        FROM `pm_community_resident`
    </select>
    <select id="countForGroupSubdistrict" resultType="java.util.Map">
        SELECT `pm_subdistrict`.`name`, count(`pm_community_resident`.`id`) AS 'value'
        FROM `pm_subdistrict`
                 LEFT JOIN `pm_community` ON `pm_subdistrict`.`id` = `pm_community`.`subdistrict_id`
                 LEFT JOIN `pm_community_resident`
        ON `pm_community`.`id` = `pm_community_resident`.`community_id`
        GROUP BY `pm_subdistrict`.`id`
    </select>
    <select id="countForGroupCommunity" resultType="java.util.Map">
        SELECT `pm_community`.`name`, count(`pm_community_resident`.`id`) AS 'value'
        FROM `pm_community`
                 LEFT JOIN `pm_community_resident`
        ON `pm_community`.`id` = `pm_community_resident`.`community_id`
        WHERE `pm_community`.`subdistrict_id` = #{subdistrictId}
        GROUP BY `pm_community`.`id`
    </select>
    <select id="countForGroupByCommunityId" resultType="java.util.Map">
        SELECT `pm_community`.`name`, count(`pm_community_resident`.`id`) AS 'value'
        FROM `pm_community`
                 LEFT JOIN `pm_community_resident`
        ON `pm_community`.`id` = `pm_community_resident`.`community_id`
        WHERE `pm_community`.`id` = #{communityId}
    </select>
    <select id="selectByUserData" resultMap="correlationResultMap">
        SELECT `pm_community_resident`.`id` AS 'community_resident_id',
        `pm_community_resident`.`name` AS 'community_resident_name',
        `pm_community_resident`.`address`,
        `pm_community_resident`.`phones`,
        `pm_subcontractor`.`name` AS 'subcontractor_name',
        `pm_subdistrict`.`name` AS 'subdistrict_name',
        `pm_community`.`name` AS 'community_name'
        FROM `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        LEFT JOIN `pm_subdistrict` ON `pm_community`.`subdistrict_id` = `pm_subdistrict`.`id`
        LEFT JOIN pm_subcontractor ON `pm_community_resident`.`subcontractor_id` = `pm_subcontractor`.`id`
        <where>
            <foreach collection="userData" item="item" separator="OR">
                <choose>
                    <when test="item.companyType == subdistrictCompanyType">
                        `pm_subdistrict`.`id` = #{item.companyId}
                    </when>
                    <when test="item.companyType == communityCompanyType">
                        `pm_community`.`id` = #{item.companyId}
                    </when>
                </choose>
            </foreach>
        </where>
    </select>
    <select id="selectByUserRole" resultMap="correlationResultMap">
        SELECT
        `pm_community_resident`.`id` AS 'community_resident_id',
        `pm_community_resident`.`name` AS 'community_resident_name',
        `pm_community_resident`.`address`,
        `pm_community_resident`.`phones`,
        `pm_community_resident`.`subcontractor_id`,
        `pm_community_resident`.`create_time` AS 'community_resident_create_time',
        `pm_community_resident`.`update_time` AS 'community_resident_update_time',
        `pm_community_resident`.`community_id`,
        `pm_community`.`name` AS 'community_name',
        `pm_community`.resident_submitted
        FROM
        `pm_community_resident`
        LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        <where>
            <if test="object.name != null">
                `pm_community_resident`.`name` LIKE CONCAT('%', #{object.name}, '%')
            </if>
            <if test="object.address != null">
                AND `pm_community_resident`.`address` LIKE CONCAT('%', #{object.address}, '%')
            </if>
            <if test="object.phones != null">
                AND `pm_community_resident`.`phones` LIKE CONCAT('%', #{object.phones}, '%')
            </if>
            <choose>
                <when test="companyType == communityCompanyType">
                    AND `pm_community_resident`.`community_id` = #{companyId}
                </when>
                <when test="companyType == subdistrictCompanyType">
                    AND `pm_community`.`subdistrict_id` = #{companyId}
                </when>
            </choose>
        </where>
        ORDER BY `pm_community_resident`.`id`
    </select>
    <select id="countBySubcontractorId" resultType="java.lang.Long">
        SELECT COUNT(`id`)
        FROM `pm_community_resident`
        WHERE `subcontractor_id` = #{subcontractorId}
    </select>
    <delete id="deleteBySubdistrictId">
        DELETE `pm_community_resident`
        FROM `pm_community_resident`
                 LEFT JOIN `pm_community` ON `pm_community_resident`.`community_id` = `pm_community`.`id`
        WHERE `pm_community`.`subdistrict_id` = #{subdistrictId}
    </delete>
</mapper>
