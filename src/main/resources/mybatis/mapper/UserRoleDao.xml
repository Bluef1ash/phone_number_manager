<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.phonenumbermanager.dao.UserRoleDao">
    <resultMap type="com.github.phonenumbermanager.entity.UserRole" id="commonResultMap">
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.UserRole" id="baseResultMap" extends="commonResultMap">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="parentId" column="parent_id"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.UserRole" id="aliasResultMap" extends="commonResultMap">
        <id property="id" column="role_id"/>
        <result property="name" column="role_name"/>
        <result property="description" column="role_description"/>
        <result property="parentId" column="role_parent_id"/>
        <result column="role_create_time" property="createTime"/>
        <result column="role_update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.UserRole" id="correlationResultMap" extends="aliasResultMap">
        <collection property="systemUsers" ofType="com.github.phonenumbermanager.entity.SystemUser"
                    resultMap="com.github.phonenumbermanager.dao.SystemUserDao.aliasResultMap"/>
        <collection property="userPrivileges" ofType="com.github.phonenumbermanager.entity.UserPrivilege"
                    resultMap="com.github.phonenumbermanager.dao.UserPrivilegeDao.aliasResultMap"/>
    </resultMap>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `pm_role` (`name`, `description`, `parent_id`, `create_time`, `update_time`)
        VALUES (#{name}, #{description}, #{parentId}, #{createTime}, #{updateTime})
    </insert>
    <delete id="deleteById">
        DELETE
        FROM `pm_role`
        WHERE `id` = #{id}
    </delete>
    <delete id="deleteByName">
        DELETE
        FROM `pm_role`
        WHERE `name` = #{name};
    </delete>
    <update id="update">
        UPDATE `pm_role`
        <set>
            <if test="id != null">
                `id` = #{id}
            </if>
            <if test="name != null">
                , `name` = #{name}
            </if>
            <if test="description != null">
                , `description` = #{description}
            </if>
            <if test="parentId != null">
                , `parent_id` = #{parentId}
            </if>
            <if test="createTime != null">
                , `create_time` = #{createTime}
            </if>
            <if test="updateTime != null">
                , `update_time` = #{updateTime}
            </if>
        </set>
        WHERE `id` = #{id}
    </update>
    <select id="selectAll" resultMap="baseResultMap">
        SELECT `id`, `name`, `description`, `parent_id`, `create_time`, `update_time`
        FROM `pm_role`
        ORDER BY `id`
    </select>
    <select id="selectById" resultMap="baseResultMap">
        SELECT `id`, `name`, `description`, `parent_id`, `create_time`, `update_time`
        FROM `pm_role`
        WHERE `id` = #{id}
    </select>
    <select id="selectByName" resultMap="baseResultMap">
        SELECT `id`, `name`, `description`, `parent_id`, `create_time`, `update_time`
        FROM `pm_role`
        WHERE `name` = #{name}
        ORDER BY `id`
    </select>
    <select id="selectAndSystemUsers" resultMap="correlationResultMap">
        SELECT `pm_role`.`id` AS 'role_id',
            `pm_role`.`name` AS 'role_name',
            `pm_role`.`description` AS 'role_description',
            `pm_role`.`create_time` AS 'role_create_time',
            `pm_role`.`update_time` AS 'role_update_time',
            `pm_role`.`parent_id` AS 'role_parent_id',
            `pm_system_user`.`id` AS 'system_user_id',
            `pm_system_user`.`username`,
            `pm_system_user`.`password`,
            `pm_system_user`.`login_time`,
            `pm_system_user`.`login_ip`,
            `pm_system_user`.`is_locked`,
            `pm_system_user`.`company_type`,
            `pm_system_user`.`company_id`
        FROM `pm_system_user`
                 LEFT JOIN `pm_role` ON `pm_system_user`.`id` = `pm_role`.`id`
        ORDER BY `pm_role`.`id`
    </select>
    <select id="selectAndPrivileges" resultMap="correlationResultMap">
        SELECT `pm_role`.`id` AS 'role_id',
            `pm_role`.`name` AS 'role_name',
            `pm_role`.`description` AS 'role_description',
            `pm_role`.`create_time` AS 'role_create_time',
            `pm_role`.`update_time` AS 'role_update_time',
            `pm_role`.`parent_id` AS 'role_parent_id',
            `pm_privilege`.`id` AS 'privilege_id',
            `pm_privilege`.`name` AS 'privilege_name',
            `pm_privilege`.`constraint_auth`,
            `pm_privilege`.`uri`,
            `pm_privilege`.`parent_id` AS `privilege_parent_id`,
            `pm_privilege`.`icon_name`,
            `pm_privilege`.`orders`,
            `pm_privilege`.`is_display`
        FROM `pm_role`
                 LEFT JOIN `pm_role_privilege` ON `pm_role`.`id` = `pm_role_privilege`.`role_id`
                 LEFT JOIN `pm_privilege` ON `pm_role_privilege`.`privilege_id` = `pm_privilege`.`id`
        ORDER BY `pm_role`.`id`
    </select>
    <select id="selectAndPrivilegesById" resultMap="correlationResultMap">
        SELECT `pm_role`.`id` AS 'role_id',
            `pm_role`.`name` AS 'role_name',
            `pm_role`.`description` AS 'role_description',
            `pm_role`.`create_time` AS 'role_create_time',
            `pm_role`.`update_time` AS 'role_update_time',
            `pm_role`.`parent_id` AS 'role_parent_id',
            `pm_privilege`.`id` AS 'privilege_id',
            `pm_privilege`.`name` AS 'privilege_name',
            `pm_privilege`.`constraint_auth`,
            `pm_privilege`.`uri`,
            `pm_privilege`.`parent_id` AS `privilege_parent_id`,
            `pm_privilege`.`icon_name`,
            `pm_privilege`.`orders`,
            `pm_privilege`.`is_display`
        FROM `pm_role`
                 LEFT JOIN `pm_role_privilege` ON `pm_role`.`id` = `pm_role_privilege`.`role_id`
                 LEFT JOIN `pm_privilege` ON `pm_role_privilege`.`privilege_id` = `pm_privilege`.`id`
        WHERE `pm_role`.`id` = #{id}
    </select>
    <select id="selectNameById" resultType="java.lang.String">
        SELECT `name`
        FROM `pm_role`
        WHERE `id` = #{id}
    </select>
</mapper>
