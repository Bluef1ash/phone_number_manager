<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.phonenumbermanager.dao.SystemUserDao">
    <resultMap type="com.github.phonenumbermanager.entity.SystemUser" id="commonResultMap">
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="loginTime" column="login_time"/>
        <result property="loginIp" column="login_ip"/>
        <result property="locked" column="is_locked"/>
        <result property="roleId" column="role_id"/>
        <result property="companyType" column="company_type"/>
        <result column="company_id" property="companyId"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.SystemUser" id="baseResultMap" extends="commonResultMap">
        <id property="id" column="id"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.SystemUser" id="aliasResultMap" extends="commonResultMap">
        <id property="id" column="system_user_id"/>
        <result column="system_user_create_time" property="createTime"/>
        <result column="system_user_update_time" property="updateTime"/>
    </resultMap>
    <resultMap type="com.github.phonenumbermanager.entity.SystemUser" id="correlationResultMap"
               extends="aliasResultMap">
        <association property="userRole" column="role_id"
                     resultMap="com.github.phonenumbermanager.dao.UserRoleDao.correlationResultMap"/>
    </resultMap>
    <insert id="insert">
        INSERT INTO `pm_system_user` (`username`, `password`, `login_time`, `login_ip`, `is_locked`, `create_time`,
                                      `update_time`, `company_type`, `company_id`, `role_id`)
        VALUES (#{username}, #{password}, #{loginTime}, #{loginIp}, #{locked}, #{createTime}, #{updateTime},
                #{companyType}, #{companyId}, #{roleId})
    </insert>
    <delete id="deleteById">
        DELETE
        FROM `pm_system_user`
        WHERE `id` = #{id}
    </delete>
    <update id="update">
        UPDATE `pm_system_user`
        <set>
            <if test="id != null">
                `id` = #{id}
            </if>
            <if test="username != null">
                , `username` = #{username}
            </if>
            <if test="password != null">
                , `password` = #{password}
            </if>
            <if test="loginTime != null">
                , `login_time` = #{loginTime}
            </if>
            <if test="loginIp != null">
                , `login_ip` = #{loginIp}
            </if>
            <if test="locked != null">
                , `is_locked` = #{locked}
            </if>
            <if test="createTime != null">
                , `create_time` = #{createTime}
            </if>
            <if test="updateTime != null">
                , `update_time` = #{updateTime}
            </if>
            <if test="companyType != null">
                , `company_type` = #{companyType}
            </if>
            <if test="companyId != null">
                , `company_id` = #{companyId}
            </if>
            <if test="roleId != null">
                , `role_id` = #{roleId}
            </if>
        </set>
        WHERE `id` = #{id}
    </update>
    <select id="selectAll" resultMap="baseResultMap">
        SELECT `id`, `username`, `password`, `login_time`, `login_ip`, `is_locked`, `create_time`, `update_time`,
            `company_type`, `company_id`, `role_id`
        FROM `pm_system_user`
        ORDER BY `id`
    </select>
    <select id="selectById" resultMap="baseResultMap">
        SELECT `id`, `username`, `password`, `login_time`, `login_ip`, `is_locked`, `create_time`, `update_time`,
            `company_type`, `company_id`, `role_id`
        FROM `pm_system_user`
        WHERE `id` = #{id}
    </select>
    <select id="selectByName" resultMap="baseResultMap">
        SELECT `id`, `username`, `password`, `login_time`, `login_ip`, `is_locked`, `create_time`, `update_time`,
            `company_type`, `company_id`, `role_id`
        FROM `pm_system_user`
        WHERE `username` = #{username}
        ORDER BY `id`
    </select>
    <select id="selectAndRoles" resultMap="correlationResultMap">
        SELECT `pm_system_user`.`id` AS 'system_user_id',
            `pm_system_user`.`username`,
            `pm_system_user`.`login_time`,
            `pm_system_user`.`login_ip`,
            `pm_system_user`.`is_locked`,
            `pm_system_user`.`create_time` AS 'system_user_create_time',
            `pm_system_user`.`update_time` AS 'system_user_update_time',
            `pm_system_user`.`company_type`,
            `pm_system_user`.`company_id`,
            `pm_system_user`.`role_id`,
            `pm_role`.`name` AS 'role_name',
            `pm_role`.`description` AS 'role_description'
        FROM `pm_system_user`
                 LEFT JOIN `pm_role` ON `pm_system_user`.`role_id` = `pm_role`.`id`
        ORDER BY `pm_system_user`.`id`
    </select>
    <select id="selectAndRoleById" resultMap="correlationResultMap">
        SELECT `pm_system_user`.`id` AS 'system_user_id',
            `pm_system_user`.`username`,
            `pm_system_user`.`is_locked`,
            `pm_system_user`.company_id,
            `pm_system_user`.`create_time` AS 'system_user_create_time',
            `pm_system_user`.`update_time` AS 'system_user_update_time',
            `pm_system_user`.`company_type`,
            `pm_system_user`.`company_id`,
            `pm_system_user`.`role_id`,
            `pm_role`.`name` AS 'role_name'
        FROM `pm_system_user`
                 LEFT JOIN `pm_role` ON `pm_system_user`.`role_id` = `pm_role`.`id`
        WHERE `pm_system_user`.`id` = #{id}
    </select>
    <select id="selectAndRoleAndPrivilegesByName" resultMap="correlationResultMap">
        SELECT `pm_system_user`.`id` AS 'system_user_id',
            `pm_system_user`.`username`,
            `pm_system_user`.`password`,
            `pm_system_user`.`login_time`,
            `pm_system_user`.`login_ip`,
            `pm_system_user`.`is_locked`,
            `pm_system_user`.`create_time` AS 'system_user_create_time',
            `pm_system_user`.`update_time` AS 'system_user_update_time',
            `pm_system_user`.`company_type`,
            `pm_system_user`.`company_id`,
            `pm_system_user`.`role_id`,
            `pm_role`.`name` AS 'role_name',
            `pm_role`.`description` AS 'role_description',
            `pm_role`.`parent_id` AS 'role_parent_id',
            `pm_privilege`.`id` AS `privilege_id`,
            `pm_privilege`.`name` AS 'privilege_name',
            `pm_privilege`.`constraint_auth`,
            `pm_privilege`.`uri`,
            `pm_privilege`.`parent_id` AS 'privilege_parent_id',
            `pm_privilege`.`icon_name`,
            `pm_privilege`.`orders`,
            `pm_privilege`.`is_display`
        FROM `pm_system_user`
                 LEFT JOIN `pm_role` ON `pm_system_user`.`role_id` = `pm_role`.`id`
                 LEFT JOIN `pm_role_privilege` ON `pm_role`.`id` = `pm_role_privilege`.`role_id`
                 LEFT JOIN `pm_privilege` ON `pm_role_privilege`.`privilege_id` = `pm_privilege`.`id`
        WHERE `pm_system_user`.`username` = #{username}
    </select>
    <select id="selectIdAndName" resultMap="baseResultMap">
        SELECT `id`, `username`
        FROM `pm_system_user`
    </select>
    <select id="selectByRoleId" resultMap="baseResultMap">
        SELECT `id`, `username`, `password`, `login_time`, `login_ip`, `is_locked`, `create_time`, `update_time`,
            `company_type`, `company_id`, `role_id`
        FROM `pm_system_user`
        WHERE `role_id` = #{roleId}
    </select>
    <select id="countByRoleId" resultType="java.lang.Long">
        SELECT COUNT(`id`)
        FROM `pm_system_user`
        WHERE `role_id` = #{roleId}
    </select>
</mapper>
