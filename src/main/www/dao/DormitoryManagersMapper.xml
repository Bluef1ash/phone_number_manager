<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="www.dao.DormitoryManagersDao">
    <resultMap type="DormitoryManager" id="dormitoryManagerResultMap">
        <id property="id" column="dormitory_manager_id"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="sexName" column="sex_name"/>
        <result property="birth" column="birth"/>
        <result property="age" column="age"/>
        <result property="politicalStatus" column="political_status"/>
        <result property="workStatus" column="work_status"/>
        <result property="education" column="education"/>
        <result property="address" column="address"/>
        <result property="managerAddress" column="manager_address"/>
        <result property="managerCount" column="manager_count"/>
        <result property="telephones" column="telephones"/>
        <result property="editTime" column="edit_time"/>
        <result property="subcontractorId" column="subcontractor_id"/>
        <result property="communityId" column="community_id"/>
    </resultMap>
    <resultMap type="DormitoryManager" id="aliasResultMap">
        <id property="id" column="dormitory_manager_id"/>
        <result property="name" column="dormitory_manager_name"/>
        <result property="sex" column="sex"/>
        <result property="sexName" column="sex_name"/>
        <result property="birth" column="birth"/>
        <result property="age" column="age"/>
        <result property="politicalStatus" column="political_status"/>
        <result property="workStatus" column="work_status"/>
        <result property="education" column="education"/>
        <result property="address" column="address"/>
        <result property="managerAddress" column="manager_address"/>
        <result property="managerCount" column="manager_count"/>
        <result property="telephones" column="telephones"/>
        <result property="editTime" column="edit_time"/>
        <result property="subcontractorId" column="subcontractor_id"/>
        <result property="communityId" column="community_id"/>
    </resultMap>
    <resultMap type="DormitoryManager" id="dormitoryManagerCorrelationCommunityResultMap" extends="aliasResultMap">
        <association property="community" column="community_id"
                     resultMap="www.dao.CommunitiesDao.communitiesCorrelationSubdistrictResultMap"/>
        <association property="subcontractor" column="subcontractor_id"
                     resultMap="www.dao.SubcontractorsDao.aliasResultMap"/>
    </resultMap>
    <insert id="insertObject">
        INSERT INTO `pm_dormitory_managers`(`dormitory_manager_id`, `name`, `sex`, `birth`, `political_status`,
                                            `work_status`, `education`, `address`, `manager_address`, `manager_count`,
                                            `telephones`, `edit_time`, `subcontractor_id`, `community_id`)
        VALUES (#{id}, #{name}, #{sex}, #{birth}, #{politicalStatus}, #{workStatus}, #{education}, #{address},
                #{managerAddress}, #{managerCount}, #{telephones}, #{editTime}, #{subcontractorId}, #{communityId})
    </insert>
    <insert id="insertBatch" useGeneratedKeys="true" keyProperty="dormitory_manager_id">
        INSERT INTO `pm_dormitory_managers`(`dormitory_manager_id`, `name`, `sex`, `birth`, `political_status`,
        `work_status`, `education`,
        `address`, `manager_address`, `manager_count`, `telephones`, `edit_time`, `subcontractor_id`, `community_id`)
        VALUES
        <foreach collection="objects" item="dormitoryManager" separator=",">
            (#{dormitoryManager.id}, #{dormitoryManager.name}, #{dormitoryManager.sex}, #{dormitoryManager.birth},
            #{dormitoryManager.politicalStatus}, #{dormitoryManager.workStatus}, #{dormitoryManager.education},
            #{dormitoryManager.address}, #{dormitoryManager.managerAddress}, #{dormitoryManager.managerCount},
            #{dormitoryManager.telephones}, #{dormitoryManager.editTime}, #{dormitoryManager.subcontractorId},
            #{dormitoryManager.communityId})
        </foreach>
    </insert>
    <delete id="deleteObjectById">
        DELETE
        FROM `pm_dormitory_managers`
        WHERE `dormitory_manager_id` = #{id}
    </delete>
    <delete id="deleteObjectsByName">
        DELETE
        FROM `pm_dormitory_managers`
        WHERE `name` = #{name}
    </delete>
    <delete id="deleteBySubdistrictId">
        DELETE `pm_dormitory_managers`
        FROM `pm_dormitory_managers`
                 LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistrictId}
    </delete>
    <update id="updateObject">
        UPDATE `pm_dormitory_managers`
        <set>
            <if test="id != null">
                `dormitory_manager_id` = #{id},
            </if>
            <if test="name != null">
                `name` = #{name},
            </if>
            <if test="sex != null">
                `sex` = #{sex},
            </if>
            <if test="birth != null">
                `birth` = #{birth},
            </if>
            <if test="politicalStatus != null">
                `political_status` = #{politicalStatus},
            </if>
            <if test="workStatus != null">
                `work_status` = #{workStatus},
            </if>
            <if test="education != null">
                `education` = #{education},
            </if>
            <if test="address != null">
                `address` = #{address},
            </if>
            <if test="managerAddress != null">
                `manager_address` = #{managerAddress},
            </if>
            <if test="managerCount != null">
                `manager_count` = #{managerCount},
            </if>
            <if test="telephones != null">
                `telephones` = #{telephones},
            </if>
            <if test="subcontractorId != null">
                `subcontractor_id` = #{subcontractorId},
            </if>
            <if test="editTime != null">
                `edit_time` = #{editTime},
            </if>
            <if test="communityId != null">
                `community_id` = #{communityId}
            </if>
        </set>
        WHERE `dormitory_manager_id` = #{id}
    </update>
    <select id="selectObjectsAll" resultMap="dormitoryManagerResultMap">
        SELECT `dormitory_manager_id`, `name`, `sex`, `birth`, `political_status`, `work_status`, `education`,
            `address`, `manager_address`, `manager_count`, `telephones`, edit_time, `subcontractor_id`, `community_id`
        FROM `pm_dormitory_managers`
    </select>
    <select id="selectObjectById" resultMap="dormitoryManagerResultMap">
        SELECT `dormitory_manager_id`, `name`, `sex`, `birth`, `political_status`, `work_status`, `education`,
            `address`, `manager_address`, `manager_count`, `telephones`, `edit_time`, `subcontractor_id`, `community_id`
        FROM `pm_dormitory_managers`
        WHERE `dormitory_manager_id` = #{id}
    </select>
    <select id="selectObjectsByName" resultMap="dormitoryManagerResultMap">
        SELECT `dormitory_manager_id`, `name`, `sex`, `birth`, `political_status`, `work_status`, `education`,
            `address`, `manager_address`, `manager_count`, `telephones`, `edit_time`, `subcontractor_id`, `community_id`
        FROM `pm_dormitory_managers`
        WHERE `name` = #{name}
    </select>
    <select id="selectObjectsAndCommunityByCommunityIds"
            resultMap="dormitoryManagerCorrelationCommunityResultMap">
        SELECT
        `pm_dormitory_managers`.`dormitory_manager_id`,
        `pm_dormitory_managers`.`name` AS 'dormitory_manager_name',
        CASE `pm_dormitory_managers`.`sex` WHEN 0 THEN '男' WHEN 1 THEN '女' ELSE '未知' END AS 'sex_name',
        TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) AS 'age',
        `pm_dormitory_managers`.`work_status`,
        `pm_dormitory_managers`.`telephones`,
        `pm_dormitory_managers`.`edit_time`,
        `pm_dormitory_managers`.`community_id`,
        `pm_communities`.`name` AS 'community_name'
        FROM
        `pm_dormitory_managers`
        LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        <where>
            <if test="communityIds != null">
                `pm_dormitory_managers`.`community_id`
                <choose>
                    <when test="communityIds.size eq 1">
                        = #{communityIds[0]}
                    </when>
                    <otherwise>
                        IN
                        <foreach collection="communityIds" separator="," open="(" close=")" item="communityId">
                            #{communityId}
                        </foreach>
                    </otherwise>
                </choose>
            </if>
        </where>
        ORDER BY `pm_dormitory_managers`.`dormitory_manager_id`
    </select>
    <select id="selectObjectAndCommunityById" resultMap="dormitoryManagerCorrelationCommunityResultMap">
        SELECT `pm_dormitory_managers`.`dormitory_manager_id`,
            `pm_dormitory_managers`.`name` AS 'dormitory_manager_name',
            `pm_dormitory_managers`.`sex`,
            `pm_dormitory_managers`.`birth`,
            `pm_dormitory_managers`.`political_status`,
            `pm_dormitory_managers`.`work_status`,
            `pm_dormitory_managers`.`education`,
            `pm_dormitory_managers`.`address`,
            `pm_dormitory_managers`.`manager_address`,
            `pm_dormitory_managers`.`manager_count`,
            `pm_dormitory_managers`.`telephones`,
            `pm_dormitory_managers`.`subcontractor_id`,
            `pm_dormitory_managers`.`community_id`,
            `pm_communities`.`name` AS 'community_name'
        FROM `pm_dormitory_managers`
                 LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        WHERE `pm_dormitory_managers`.`dormitory_manager_id` = #{id}
    </select>
    <select id="selectByUserData" resultMap="dormitoryManagerCorrelationCommunityResultMap">
        SELECT `pm_communities`.`name` AS 'community_name',
        `pm_dormitory_managers`.`dormitory_manager_id`,
        `pm_dormitory_managers`.`name` AS 'dormitory_manager_name',
        `pm_dormitory_managers`.`sex`,
        `pm_dormitory_managers`.`birth`,
        `pm_dormitory_managers`.`political_status`,
        `pm_dormitory_managers`.`work_status`,
        `pm_dormitory_managers`.`education`,
        `pm_dormitory_managers`.`address`,
        `pm_dormitory_managers`.`manager_address`,
        `pm_dormitory_managers`.`manager_count`,
        `pm_dormitory_managers`.`telephones`,
        `pm_subcontractors`.`name` AS 'subcontractor_name',
        `pm_subcontractors`.`telephone` AS 'subcontractor_telephone',
        `pm_communities`.`subdistrict_id`
        FROM `pm_dormitory_managers`
        LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        LEFT JOIN pm_subcontractors ON `pm_dormitory_managers`.`subcontractor_id` =
        `pm_subcontractors`.`subcontractor_id`
        <where>
            <foreach collection="userData" item="item" separator="OR">
                <choose>
                    <when test="item.roleId == subdistrictRoleId">
                        `pm_communities`.`subdistrict_id` = #{item.roleLocationId}
                    </when>
                    <when test="item.roleId == communityRoleId">
                        `pm_communities`.`community_id` = #{item.roleLocationId}
                    </when>
                </choose>
            </foreach>
        </where>
    </select>
    <select id="selectByUserRole" resultMap="dormitoryManagerCorrelationCommunityResultMap">
        SELECT
        `pm_dormitory_managers`.`dormitory_manager_id`,
        `pm_dormitory_managers`.`name` AS 'dormitory_manager_name',
        CASE `pm_dormitory_managers`.`sex` WHEN 0 THEN '男' WHEN 1 THEN '女' ELSE '未知' END AS 'sex_name',
        TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) AS 'age',
        `pm_dormitory_managers`.`work_status`,
        `pm_dormitory_managers`.`telephones`,
        `pm_dormitory_managers`.`community_id`,
        `pm_communities`.`name` AS 'community_name'
        FROM
        `pm_dormitory_managers`
        LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        <where>
            <if test="object.name != null">
                `pm_dormitory_managers`.`name` LIKE CONCAT('%', #{object.name}, '%')
            </if>
            <if test="object.sex != null and object.sex != -1">
                AND `pm_dormitory_managers`.`sex` = #{object.sex}
            </if>
            <if test="object.address != null">
                AND `pm_dormitory_managers`.`address` LIKE CONCAT('%', #{object.address}, '%')
            </if>
            <if test="object.telephones != null">
                AND `pm_dormitory_managers`.`telephones` LIKE CONCAT('%', #{object.telephones}, '%')
            </if>
            <choose>
                <when test="userRoleId == communityRoleId">
                    AND `pm_dormitory_managers`.`community_id` = #{userRoleLocationId}
                </when>
                <when test="userRoleId == subdistrictRoleId">
                    AND `pm_communities`.`subdistrict_id` = #{userRoleLocationId}
                </when>
            </choose>
        </where>
        ORDER BY `pm_dormitory_managers`.`dormitory_manager_id`
    </select>
    <select id="countObjectByCommunityId" resultType="long">
        SELECT COUNT(`dormitory_manager_id`)
        FROM `pm_dormitory_managers`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="selectLastIdByCommunityId" resultType="string">
        SELECT `dormitory_manager_id`
        FROM `pm_dormitory_managers`
        WHERE `community_id` = #{communityId}
        ORDER BY `dormitory_manager_id` DESC
        LIMIT 1
    </select>
    <select id="selectByNameAndAddress" resultMap="dormitoryManagerCorrelationCommunityResultMap">
        SELECT
        `pm_dormitory_managers`.`name` AS 'dormitory_manager_name',
        `pm_dormitory_managers`.`community_id`,
        `pm_communities`.`name` AS 'community_name'
        FROM `pm_dormitory_managers`
        LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        <where>
            CONCAT(`pm_dormitory_managers`.`name`, `pm_dormitory_managers`.`address`) = #{nameAddress}
            <if test="id != null">
                AND `pm_dormitory_managers`.`dormitory_manager_id` != #{id}
            </if>
            AND `pm_communities`.`subdistrict_id` = #{subdistrictId}
        </where>
    </select>
    <select id="selectByPhones" resultMap="dormitoryManagerCorrelationCommunityResultMap">
        SELECT
        `pm_dormitory_managers`.`dormitory_manager_id`,
        `pm_dormitory_managers`.`name` AS 'dormitory_manager_name',
        `pm_dormitory_managers`.`telephones`,
        `pm_dormitory_managers`.`community_id`,
        `pm_communities`.`name` AS 'community_name'
        FROM `pm_dormitory_managers`
        LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        <where>
            <foreach collection="phones" item="phone" separator="OR">
                `pm_dormitory_managers`.`telephones` LIKE CONCAT('%', #{phone}, '%')
            </foreach>
            <if test="id != null">
                AND `pm_dormitory_managers`.`dormitory_manager_id` != #{id}
            </if>
            AND `pm_communities`.`subdistrict_id` = #{subdistrictId}
        </where>
    </select>
    <select id="countSexAll" resultType="map">
        SELECT SUM(CASE WHEN `sex` = 0 THEN 1 ELSE 0 END) AS 'male',
            SUM(CASE WHEN `sex` = 1 THEN 1 ELSE 0 END) AS 'female'
        FROM `pm_dormitory_managers`
    </select>
    <select id="countSexByCommunityId" resultType="map">
        SELECT SUM(CASE WHEN `sex` = 0 THEN 1 ELSE 0 END) AS 'male',
            SUM(CASE WHEN `sex` = 1 THEN 1 ELSE 0 END) AS 'female'
        FROM `pm_dormitory_managers`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countSexBySubdistrictId" resultType="map">
        SELECT SUM(CASE WHEN `pm_dormitory_managers`.`sex` = 0 THEN 1 ELSE 0 END) AS 'male',
            SUM(CASE WHEN `pm_dormitory_managers`.`sex` = 1 THEN 1 ELSE 0 END) AS 'female'
        FROM `pm_dormitory_managers`
                 LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countAgeRangeAll" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
            &lt;
            20
                            THEN 1
                        ELSE 0 END) AS '20岁以下',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 21
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    30
                         THEN 1
                     ELSE 0 END) AS '21岁~30岁', SUM(
            CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 31
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    40
                     THEN 1
                 ELSE 0 END) AS '31岁~40岁', SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 41
            AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                &lt;
                50
                                                        THEN 1
                                                    ELSE 0 END) AS '41岁~50岁', SUM(
            CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 51
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    60
                     THEN 1
                 ELSE 0 END) AS '51岁~60岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 61
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    70
                         THEN 1
                     ELSE 0 END) AS '61岁~70岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) > 71
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    80
                         THEN 1
                     ELSE 0 END) AS '71岁~80岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 81
                         THEN 1
                     ELSE 0 END) AS '81岁以上'
        FROM `pm_dormitory_managers`
    </select>
    <select id="countAgeRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
            &lt;
            20
                            THEN 1
                        ELSE 0 END) AS '20岁以下',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 21
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    30
                         THEN 1
                     ELSE 0 END) AS '21岁~30岁', SUM(
            CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 31
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    40
                     THEN 1
                 ELSE 0 END) AS '31岁~40岁', SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 41
            AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                &lt;
                50
                                                        THEN 1
                                                    ELSE 0 END) AS '41岁~50岁', SUM(
            CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 51
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    60
                     THEN 1
                 ELSE 0 END) AS '51岁~60岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 61
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    70
                         THEN 1
                     ELSE 0 END) AS '61岁~70岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) > 71
                AND TIMESTAMPDIFF(YEAR, `birth`, CURDATE())
                    &lt;
                    80
                         THEN 1
                     ELSE 0 END) AS '71岁~80岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `birth`, CURDATE()) &gt; 81
                         THEN 1
                     ELSE 0 END) AS '81岁以上'
        FROM `pm_dormitory_managers`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countAgeRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE())
            &lt;
            20
                            THEN 1
                        ELSE 0 END) AS '20岁以下',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) &gt; 21
                AND TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE())
                    &lt;
                    30
                         THEN 1
                     ELSE 0 END) AS '21岁~30岁', SUM(
            CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) &gt; 31
                AND TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE())
                    &lt;
                    40
                     THEN 1
                 ELSE 0 END) AS '31岁~40岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) &gt; 41
                AND TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE())
                    &lt;
                    50
                         THEN 1
                     ELSE 0 END) AS '41岁~50岁', SUM(
            CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) &gt; 51
                AND TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE())
                    &lt;
                    60
                     THEN 1
                 ELSE 0 END) AS '51岁~60岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) &gt; 61
                AND TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE())
                    &lt;
                    70
                         THEN 1
                     ELSE 0 END) AS '61岁~70岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) > 71
                AND TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE())
                    &lt;
                    80
                         THEN 1
                     ELSE 0 END) AS '71岁~80岁',
            SUM(CASE WHEN TIMESTAMPDIFF(YEAR, `pm_dormitory_managers`.`birth`, CURDATE()) &gt; 81
                         THEN 1
                     ELSE 0 END) AS '81岁以上'
        FROM `pm_dormitory_managers`
                 LEFT JOIN `pm_communities` ON pm_dormitory_managers.community_id = `pm_communities`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countEducationRangeAll" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `education` = 0 THEN 1 ELSE 0 END) AS '文盲',
            SUM(CASE WHEN `education` = 1 THEN 1 ELSE 0 END) AS '小学',
            SUM(CASE WHEN `education` = 2 THEN 1 ELSE 0 END) AS '初中',
            SUM(CASE WHEN `education` = 3 THEN 1 ELSE 0 END) AS '中专',
            SUM(CASE WHEN `education` = 4 THEN 1 ELSE 0 END) AS '高中',
            SUM(CASE WHEN `education` = 5 THEN 1 ELSE 0 END) AS '大专',
            SUM(CASE WHEN `education` = 6 THEN 1 ELSE 0 END) AS '本科',
            SUM(CASE WHEN `education` = 7 THEN 1 ELSE 0 END) AS '硕士研究生',
            SUM(CASE WHEN `education` = 8 THEN 1 ELSE 0 END) AS '博士研究生'
        FROM `pm_dormitory_managers`
    </select>
    <select id="countEducationRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `education` = 0 THEN 1 ELSE 0 END) AS '文盲',
            SUM(CASE WHEN `education` = 1 THEN 1 ELSE 0 END) AS '小学',
            SUM(CASE WHEN `education` = 2 THEN 1 ELSE 0 END) AS '初中',
            SUM(CASE WHEN `education` = 3 THEN 1 ELSE 0 END) AS '中专',
            SUM(CASE WHEN `education` = 4 THEN 1 ELSE 0 END) AS '高中',
            SUM(CASE WHEN `education` = 5 THEN 1 ELSE 0 END) AS '大专',
            SUM(CASE WHEN `education` = 6 THEN 1 ELSE 0 END) AS '本科',
            SUM(CASE WHEN `education` = 7 THEN 1 ELSE 0 END) AS '硕士研究生',
            SUM(CASE WHEN `education` = 8 THEN 1 ELSE 0 END) AS '博士研究生'
        FROM `pm_dormitory_managers`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countEducationRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `pm_dormitory_managers`.`education` = 0 THEN 1 ELSE 0 END) AS '文盲',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 1 THEN 1 ELSE 0 END) AS '小学',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 2 THEN 1 ELSE 0 END) AS '初中',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 3 THEN 1 ELSE 0 END) AS '中专',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 4 THEN 1 ELSE 0 END) AS '高中',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 5 THEN 1 ELSE 0 END) AS '大专',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 6 THEN 1 ELSE 0 END) AS '本科',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 7 THEN 1 ELSE 0 END) AS '硕士研究生',
            SUM(CASE WHEN `pm_dormitory_managers`.`education` = 8 THEN 1 ELSE 0 END) AS '博士研究生'
        FROM `pm_dormitory_managers`
                 LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countPoliticalStatusRangeAll" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `political_status` = 0 THEN 1 ELSE 0 END) AS '群众',
            SUM(CASE WHEN `political_status` = 1 THEN 1 ELSE 0 END) AS '共产党员',
            SUM(CASE WHEN `political_status` = 2 THEN 1 ELSE 0 END) AS '预备共产党员',
            SUM(CASE WHEN `political_status` = 3 THEN 1 ELSE 0 END) AS '共青团员',
            SUM(CASE WHEN `political_status` = 4 THEN 1 ELSE 0 END) AS '预备共青团员',
            SUM(CASE WHEN `political_status` = 5 THEN 1 ELSE 0 END) AS '其它'
        FROM `pm_dormitory_managers`
    </select>
    <select id="countPoliticalStatusRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `political_status` = 0 THEN 1 ELSE 0 END) AS '群众',
            SUM(CASE WHEN `political_status` = 1 THEN 1 ELSE 0 END) AS '共产党员',
            SUM(CASE WHEN `political_status` = 2 THEN 1 ELSE 0 END) AS '预备共产党员',
            SUM(CASE WHEN `political_status` = 3 THEN 1 ELSE 0 END) AS '共青团员',
            SUM(CASE WHEN `political_status` = 4 THEN 1 ELSE 0 END) AS '预备共青团员',
            SUM(CASE WHEN `political_status` = 5 THEN 1 ELSE 0 END) AS '其它'
        FROM `pm_dormitory_managers`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countPoliticalStatusRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `pm_dormitory_managers`.`political_status` = 0 THEN 1 ELSE 0 END) AS '群众',
            SUM(CASE WHEN `pm_dormitory_managers`.`political_status` = 1 THEN 1 ELSE 0 END) AS '共产党员',
            SUM(CASE WHEN `pm_dormitory_managers`.`political_status` = 2 THEN 1 ELSE 0 END) AS '预备共产党员',
            SUM(CASE WHEN `pm_dormitory_managers`.`political_status` = 3 THEN 1 ELSE 0 END) AS '共青团员',
            SUM(CASE WHEN `pm_dormitory_managers`.`political_status` = 4 THEN 1 ELSE 0 END) AS '预备共青团员',
            SUM(CASE WHEN `pm_dormitory_managers`.`political_status` = 5 THEN 1 ELSE 0 END) AS '其它'
        FROM `pm_dormitory_managers`
                 LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countWorkStatusRangeAll" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `work_status` = 0 THEN 1 ELSE 0 END) AS '在职',
            SUM(CASE WHEN `work_status` = 1 THEN 1 ELSE 0 END) AS '退休',
            SUM(CASE WHEN `work_status` = 2 THEN 1 ELSE 0 END) AS '无业'
        FROM `pm_dormitory_managers`
    </select>
    <select id="countWorkStatusRangeCommunityId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `work_status` = 0 THEN 1 ELSE 0 END) AS '在职',
            SUM(CASE WHEN `work_status` = 1 THEN 1 ELSE 0 END) AS '退休',
            SUM(CASE WHEN `work_status` = 2 THEN 1 ELSE 0 END) AS '无业'
        FROM `pm_dormitory_managers`
        WHERE `community_id` = #{communityId}
    </select>
    <select id="countWorkStatusRangeSubdistrictId" resultType="java.util.LinkedHashMap">
        SELECT SUM(CASE WHEN `pm_dormitory_managers`.`work_status` = 0 THEN 1 ELSE 0 END) AS '在职',
            SUM(CASE WHEN `pm_dormitory_managers`.`work_status` = 1 THEN 1 ELSE 0 END) AS '退休',
            SUM(CASE WHEN `pm_dormitory_managers`.`work_status` = 2 THEN 1 ELSE 0 END) AS '无业'
        FROM `pm_dormitory_managers`
                 LEFT JOIN `pm_communities` ON `pm_dormitory_managers`.`community_id` = `pm_communities`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistricId}
    </select>
    <select id="countForGroupSubdistrict" resultType="map">
        SELECT `pm_subdistricts`.`name`, COUNT(`pm_dormitory_managers`.`dormitory_manager_id`) AS 'value'
        FROM `pm_subdistricts`
                 LEFT JOIN `pm_communities` ON `pm_subdistricts`.`subdistrict_id` = `pm_communities`.`subdistrict_id`
                 LEFT JOIN `pm_dormitory_managers`
        ON `pm_communities`.`community_id` = `pm_dormitory_managers`.`community_id`
        GROUP BY `pm_subdistricts`.`subdistrict_id`
    </select>
    <select id="countForGroupCommunity" resultType="map">
        SELECT `pm_communities`.`name`, COUNT(`pm_dormitory_managers`.`dormitory_manager_id`) AS 'value'
        FROM `pm_communities`
                 LEFT JOIN `pm_dormitory_managers`
        ON `pm_communities`.`community_id` = `pm_dormitory_managers`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistrictId}
        GROUP BY `pm_communities`.`community_id`
    </select>
    <select id="countForGroupByCommunityId" resultType="map">
        SELECT `pm_communities`.`name`, COUNT(`pm_dormitory_managers`.`dormitory_manager_id`) AS 'value'
        FROM `pm_communities`
                 LEFT JOIN `pm_dormitory_managers`
        ON `pm_communities`.`community_id` = `pm_dormitory_managers`.`community_id`
        WHERE `pm_communities`.`community_id` = #{communityId}
    </select>
    <select id="sumManagerCountForGroupSubdistrict" resultType="map">
        SELECT `pm_subdistricts`.`name`, SUM(`pm_dormitory_managers`.`manager_count`) AS 'value'
        FROM `pm_subdistricts`
                 LEFT JOIN `pm_communities` ON `pm_subdistricts`.`subdistrict_id` = `pm_communities`.`subdistrict_id`
                 LEFT JOIN `pm_dormitory_managers`
        ON `pm_communities`.`community_id` = `pm_dormitory_managers`.`community_id`
        GROUP BY `pm_subdistricts`.`subdistrict_id`
    </select>
    <select id="sumManagerCountForGroupByCommunityId" resultType="map">
        SELECT `pm_communities`.`name`, SUM(`pm_dormitory_managers`.`manager_count`) AS 'value'
        FROM `pm_communities`
                 LEFT JOIN `pm_dormitory_managers`
        ON `pm_communities`.`community_id` = `pm_dormitory_managers`.`community_id`
        WHERE `pm_communities`.`community_id` = #{communityId}
    </select>
    <select id="sumManagerCountForGroupCommunity" resultType="map">
        SELECT `pm_communities`.`name`, SUM(`pm_dormitory_managers`.`manager_count`) AS 'value'
        FROM `pm_communities`
                 LEFT JOIN `pm_dormitory_managers`
        ON `pm_communities`.`community_id` = `pm_dormitory_managers`.`community_id`
        WHERE `pm_communities`.`subdistrict_id` = #{subdistrictId}
        GROUP BY `pm_communities`.`community_id`
    </select>
</mapper>
